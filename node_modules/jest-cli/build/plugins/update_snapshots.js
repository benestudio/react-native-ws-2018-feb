'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _watch_plugin;








function _load_watch_plugin() {return _watch_plugin = _interopRequireDefault(require('../watch_plugin'));}function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} /**
                                                                                                                                                                                                         * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
                                                                                                                                                                                                         *
                                                                                                                                                                                                         * This source code is licensed under the MIT license found in the
                                                                                                                                                                                                         * LICENSE file in the root directory of this source tree.
                                                                                                                                                                                                         *
                                                                                                                                                                                                         * 
                                                                                                                                                                                                         */class UpdateSnapshotsPlugin extends (_watch_plugin || _load_watch_plugin()).default {showPrompt(globalConfig, updateConfigAndRun)
  {
    updateConfigAndRun({ updateSnapshot: 'all' });
    return Promise.resolve(false);
  }

  registerHooks(hooks) {
    hooks.testRunComplete(results => {
      this._hasSnapshotFailure = results.snapshot.failure;
    });
  }

  getUsageRow(globalConfig) {
    return {
      hide: !this._hasSnapshotFailure,
      key: 'u'.codePointAt(0),
      prompt: 'update failing snapshots' };

  }}exports.default =


UpdateSnapshotsPlugin;