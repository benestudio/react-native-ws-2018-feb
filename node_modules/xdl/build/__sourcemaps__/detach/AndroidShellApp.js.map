{"version":3,"sources":["detach/AndroidShellApp.js"],"names":["async","regex","replace","filename","let","file","await","fs","readFile","fileString","toString","writeFile","regexFileAsync","startRegex","endRegex","lines","split","filteredLines","inDeleteRange","i","length","match","push","join","deleteLinesInFileAsync","androidSrcPath","shellPath","isDetached","_exponentDirectory","exponentDirectory","spawnAsync","stdio","cwd","path","copyToShellApp","fileName","copy","e","console","warn","copyInitialShellAppFilesAsync","resDirPath","folderPrefix","iconUrl","isLocalUrl","Promise","all","imageKeys","map","key","dirPath","accessSync","constants","F_OK","copyFileSync","saveUrlToPathAsync","copyIconsToResSubfolders","context","shellPathForContext","url","published","manifest","config","releaseChannel","data","privateConfig","fullManifestUrl","versionCode","javaPackage","android","package","Error","name","scheme","detach","bundleUrl","isFullManifest","notificationIconUrl","notification","version","backgroundImages","backgroundImagesForApp","splashBackgroundColor","getSplashScreenBackgroundColor","icon","remove","appBuildGradle","buildGradleFile","readFileSync","androidVersion","shouldShowLoadingView","xmlWeirdAndroidEscape","permissions","content","p","whitelist","forEach","s","includes","identifier","pop","blacklist","filter","writeFileSync","JSON","stringify","globby","absolute","filePath","removeSync","_","image","bundledAssets","downloadAssetsAsync","certificateHash","googleAndroidApiKey","branch","fabric","googleMaps","googleSignIn","apiKey","buildSecret","runShellAppModificationsAsync","build","androidBuildConfiguration","gradleArgs","process","env","GRADLE_DAEMON_DISABLED","unshift","spawnAsyncThrowError","keystorePassword","keyPassword","keystore","keyAlias","outputFile","buildShellAppAsync","assets","dest","reduce","res","cur","concat","fileHashes","h","type","ensureDir","batches","chunk","batch","asset","extensionIndex","lastIndexOf","prefixLength","hash","substring","require","JsonFile","replaceString","getManifestAsync","TURTLE_WORKING_DIR_PATH","EXPO_UNIVERSE_DIR","original","noAmps","noLt","noGt","noApos","exports","updateAndroidShellAppAsync","args","sdkVersion","androidPackage","privateConfigFile","alias","basePath","get","splash","acc","imageKey","backgroundColor","resizeMode","createAndroidShellAppAsync","configuration","privateConfigContents","parse","buildFlags","StandaloneBuildFlags","createAndroid","StandaloneContext","createServiceContext","skipBuild","projectPath"],"mappings":"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","file":"../../detach/AndroidShellApp.js","sourcesContent":["// Copyright 2015-present 650 Industries. All rights reserved.\n/**\n * @flow\n */\n\n'use strict';\n\nconst fs = require('fs-extra');\nconst path = require('path');\nconst JsonFile = require('@expo/json-file');\nconst replaceString = require('replace-string');\nconst _ = require('lodash');\nconst globby = require('globby');\n\nimport * as ExponentTools from './ExponentTools';\nimport StandaloneBuildFlags from './StandaloneBuildFlags';\nimport StandaloneContext from './StandaloneContext';\n\nconst { getManifestAsync, saveUrlToPathAsync, spawnAsyncThrowError, spawnAsync } = ExponentTools;\n\nconst imageKeys = ['ldpi', 'mdpi', 'hdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi'];\n\n// Do not call this from anything used by detach\nfunction exponentDirectory() {\n  if (process.env.TURTLE_WORKING_DIR_PATH) {\n    return process.env.TURTLE_WORKING_DIR_PATH;\n  } else if (process.env.EXPO_UNIVERSE_DIR) {\n    return path.join(process.env.EXPO_UNIVERSE_DIR, 'exponent');\n  } else {\n    return null;\n  }\n}\n\nasync function regexFileAsync(regex, replace, filename) {\n  let file = await fs.readFile(filename);\n  let fileString = file.toString();\n  await fs.writeFile(filename, fileString.replace(regex, replace));\n}\n\n// Matches sed /d behavior\nasync function deleteLinesInFileAsync(startRegex, endRegex, filename) {\n  let file = await fs.readFile(filename);\n  let fileString = file.toString();\n  let lines = fileString.split(/\\r?\\n/);\n  let filteredLines = [];\n  let inDeleteRange = false;\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].match(startRegex)) {\n      inDeleteRange = true;\n    }\n\n    if (!inDeleteRange) {\n      filteredLines.push(lines[i]);\n    }\n\n    if (inDeleteRange && lines[i].match(endRegex)) {\n      inDeleteRange = false;\n    }\n  }\n  await fs.writeFile(filename, filteredLines.join('\\n'));\n}\n\nfunction xmlWeirdAndroidEscape(original) {\n  let noAmps = replaceString(original, '&', '&amp;');\n  let noLt = replaceString(noAmps, '<', '&lt;');\n  let noGt = replaceString(noLt, '>', '&gt;');\n  let noApos = replaceString(noGt, '\"', '\\\\\"');\n  return replaceString(noApos, \"'\", \"\\\\'\");\n}\n\nexports.updateAndroidShellAppAsync = async function updateAndroidShellAppAsync(args: any) {\n  let {\n    url,\n    sdkVersion,\n    androidPackage,\n    privateConfigFile,\n    keystore,\n    alias,\n    keystorePassword,\n    keyPassword,\n    releaseChannel,\n    outputFile,\n  } = args;\n\n  releaseChannel = releaseChannel ? releaseChannel : 'default';\n  let manifest = await getManifestAsync(url, {\n    'Exponent-SDK-Version': sdkVersion,\n    'Exponent-Platform': 'android',\n    'Expo-Release-Channel': releaseChannel,\n  });\n\n  let fullManifestUrl = `${url.replace('exp://', 'https://')}/index.exp`;\n  let bundleUrl = manifest.bundleUrl;\n\n  let shellPath = path.join(exponentDirectory(), 'android-shell-app');\n\n  await fs.remove(path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'));\n  await fs.writeFileSync(\n    path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'),\n    JSON.stringify(manifest)\n  );\n  await fs.remove(path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle'));\n  await saveUrlToPathAsync(\n    bundleUrl,\n    path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle')\n  );\n\n  await deleteLinesInFileAsync(\n    `START\\ EMBEDDED\\ RESPONSES`,\n    `END\\ EMBEDDED\\ RESPONSES`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  await regexFileAsync(\n    '// ADD EMBEDDED RESPONSES HERE',\n    `\n    // ADD EMBEDDED RESPONSES HERE\n    // START EMBEDDED RESPONSES\n    embeddedResponses.add(new Constants.EmbeddedResponse(\"${fullManifestUrl}\", \"assets://shell-app-manifest.json\", \"application/json\"));\n    embeddedResponses.add(new Constants.EmbeddedResponse(\"${bundleUrl}\", \"assets://shell-app.bundle\", \"application/javascript\"));\n    // END EMBEDDED RESPONSES`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  await regexFileAsync(\n    'RELEASE_CHANNEL = \"default\"',\n    `RELEASE_CHANNEL = \"${releaseChannel}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n};\n\nfunction backgroundImagesForApp(shellPath, manifest) {\n  // returns an array like:\n  // [\n  //   {url: 'urlToDownload', path: 'pathToSaveTo'},\n  //   {url: 'anotherURlToDownload', path: 'anotherPathToSaveTo'},\n  // ]\n  let basePath = path.join(shellPath, 'app', 'src', 'main', 'res');\n  if (_.get(manifest, 'android.splash')) {\n    var splash = _.get(manifest, 'android.splash');\n    return _.reduce(\n      imageKeys,\n      function(acc, imageKey) {\n        let url = _.get(splash, `${imageKey}Url`);\n        if (url) {\n          acc.push({\n            url,\n            path: path.join(basePath, `drawable-${imageKey}`, 'shell_launch_background_image.png'),\n          });\n        }\n\n        return acc;\n      },\n      []\n    );\n  }\n\n  if (_.get(manifest, 'splash.imageUrl')) {\n    let url = _.get(manifest, 'splash.imageUrl');\n    return [\n      {\n        url,\n        path: path.join(basePath, 'drawable-xxxhdpi', 'shell_launch_background_image.png'),\n      },\n    ];\n  }\n\n  return [];\n}\n\nfunction getSplashScreenBackgroundColor(manifest) {\n  let backgroundColor;\n  if (manifest.android && manifest.android.splash && manifest.android.splash.backgroundColor) {\n    backgroundColor = manifest.android.splash.backgroundColor;\n  } else if (manifest.splash && manifest.splash.backgroundColor) {\n    backgroundColor = manifest.splash.backgroundColor;\n  }\n\n  // Default to white\n  if (!backgroundColor) {\n    backgroundColor = '#FFFFFF';\n  }\n  return backgroundColor;\n}\n\n/*\n  if resizeMode is 'cover' we should show LoadingView:\n  using an ImageView, unlike having a BitmapDrawable\n  provides a fullscreen image without distortions\n*/\nfunction shouldShowLoadingView(manifest) {\n  return (\n    (manifest.android &&\n      manifest.android.splash &&\n      manifest.android.splash.resizeMode &&\n      manifest.android.splash.resizeMode === 'cover') ||\n    (manifest.splash && manifest.splash.resizeMode && manifest.splash.resizeMode === 'cover')\n  );\n}\n\nexport async function copyInitialShellAppFilesAsync(\n  androidSrcPath,\n  shellPath,\n  isDetached: boolean = false\n) {\n  let _exponentDirectory = exponentDirectory();\n  if (_exponentDirectory) {\n    await spawnAsync(`../../tools-public/generate-dynamic-macros-android.sh`, [], {\n      stdio: 'inherit',\n      cwd: path.join(_exponentDirectory, 'android', 'app'),\n    }); // populate android template files now since we take out the prebuild step later on\n  }\n\n  let copyToShellApp = async fileName => {\n    try {\n      await fs.copy(path.join(androidSrcPath, fileName), path.join(shellPath, fileName));\n    } catch (e) {\n      // android.iml is only available locally, not on the builders, so don't crash when this happens\n      console.warn(`Warning: Could not copy ${fileName} to shell app directory.`);\n    }\n  };\n\n  if (!isDetached) {\n    await copyToShellApp('expoview');\n    await copyToShellApp('ReactCommon');\n    await copyToShellApp('ReactAndroid');\n  }\n\n  await copyToShellApp('android.iml');\n  await copyToShellApp('app');\n  await copyToShellApp('build.gradle');\n  await copyToShellApp('gradle');\n  await copyToShellApp('gradle.properties');\n  await copyToShellApp('gradlew');\n  await copyToShellApp('settings.gradle');\n  await copyToShellApp('maven');\n  await copyToShellApp('debug.keystore');\n  await copyToShellApp('run.sh');\n  await copyToShellApp('detach-scripts');\n}\n\nexports.createAndroidShellAppAsync = async function createAndroidShellAppAsync(args: any) {\n  let {\n    url,\n    sdkVersion,\n    releaseChannel,\n    privateConfigFile,\n    configuration,\n    keystore,\n    alias,\n    keystorePassword,\n    keyPassword,\n    outputFile,\n  } = args;\n\n  let androidSrcPath = path.join(exponentDirectory(), 'android');\n  let shellPath = path.join(exponentDirectory(), 'android-shell-app');\n\n  await fs.remove(shellPath);\n  await fs.ensureDir(shellPath);\n\n  releaseChannel = releaseChannel ? releaseChannel : 'default';\n  let manifest = await getManifestAsync(url, {\n    'Exponent-SDK-Version': sdkVersion,\n    'Exponent-Platform': 'android',\n    'Expo-Release-Channel': releaseChannel,\n  });\n  configuration = configuration ? configuration : 'Release';\n\n  let privateConfig;\n  if (privateConfigFile) {\n    let privateConfigContents = await fs.readFile(privateConfigFile, 'utf8');\n    privateConfig = JSON.parse(privateConfigContents);\n  }\n\n  let androidBuildConfiguration;\n  if (keystore && alias && keystorePassword && keyPassword) {\n    androidBuildConfiguration = {\n      keystore,\n      keystorePassword,\n      keyAlias: alias,\n      keyPassword,\n      outputFile,\n    };\n  }\n\n  let buildFlags = StandaloneBuildFlags.createAndroid(configuration, androidBuildConfiguration);\n  let context = StandaloneContext.createServiceContext(\n    androidSrcPath,\n    null,\n    manifest,\n    privateConfig,\n    buildFlags,\n    url,\n    releaseChannel\n  );\n\n  await copyInitialShellAppFilesAsync(androidSrcPath, shellPath);\n  await runShellAppModificationsAsync(context);\n\n  if (!args.skipBuild) {\n    await buildShellAppAsync(context);\n  }\n};\n\nfunction shellPathForContext(context: StandaloneContext) {\n  if (context.type === 'user') {\n    return path.join(context.data.projectPath, 'android');\n  } else {\n    return path.join(exponentDirectory(), 'android-shell-app');\n  }\n}\n\nasync function copyIconsToResSubfolders(resDirPath, folderPrefix, fileName, iconUrl, isLocalUrl) {\n  return Promise.all(\n    imageKeys.map(async key => {\n      try {\n        const dirPath = path.join(resDirPath, `${folderPrefix}-${key}`);\n        fs.accessSync(dirPath, fs.constants.F_OK);\n        if (isLocalUrl) {\n          return fs.copyFileSync(iconUrl, path.join(dirPath, fileName));\n        }\n        return await saveUrlToPathAsync(iconUrl, path.join(dirPath, fileName));\n      } catch (e) {\n        // directory does not exist, so ignore\n      }\n    })\n  );\n}\n\nexport async function runShellAppModificationsAsync(\n  context: StandaloneContext,\n  isDetached: boolean = false\n) {\n  let shellPath = shellPathForContext(context);\n  let url: string = context.published.url;\n  let manifest = context.config; // manifest or app.json\n  let releaseChannel = context.published.releaseChannel;\n\n  if (!context.data.privateConfig) {\n    console.warn('Warning: No config file specified.');\n  }\n\n  let fullManifestUrl = `${url.replace('exp://', 'https://')}/index.exp`;\n\n  let versionCode = 1;\n  let javaPackage = manifest.android.package;\n  if (manifest.android.versionCode) {\n    versionCode = manifest.android.versionCode;\n  }\n\n  if (!javaPackage) {\n    throw new Error(\n      'Must specify androidPackage option (either from manifest or on command line).'\n    );\n  }\n\n  let name = manifest.name;\n  let iconUrl =\n    manifest.android && manifest.android.iconUrl ? manifest.android.iconUrl : manifest.iconUrl;\n  let scheme = manifest.scheme || (manifest.detach && manifest.detach.scheme);\n  let bundleUrl: ?string = manifest.bundleUrl;\n  let isFullManifest = !!bundleUrl;\n  let notificationIconUrl = manifest.notification ? manifest.notification.iconUrl : null;\n  let version = manifest.version ? manifest.version : '0.0.0';\n  let backgroundImages = backgroundImagesForApp(shellPath, manifest);\n  let splashBackgroundColor = getSplashScreenBackgroundColor(manifest);\n\n  if (isDetached) {\n    // manifest is actually just app.json in this case, so iconUrl fields don't exist\n    iconUrl = manifest.android && manifest.android.icon ? manifest.android.icon : manifest.icon;\n    notificationIconUrl = manifest.notification ? manifest.notification.icon : null;\n  }\n\n  // Clean build directories\n  await fs.remove(path.join(shellPath, 'app', 'build'));\n  await fs.remove(path.join(shellPath, 'ReactAndroid', 'build'));\n  await fs.remove(path.join(shellPath, 'expoview', 'build'));\n  await fs.remove(path.join(shellPath, 'app', 'src', 'androidTest'));\n\n  if (isDetached) {\n    let appBuildGradle = path.join(shellPath, 'app', 'build.gradle');\n    await regexFileAsync(/\\/\\* UNCOMMENT WHEN DISTRIBUTING/g, '', appBuildGradle);\n    await regexFileAsync(/END UNCOMMENT WHEN DISTRIBUTING \\*\\//g, '', appBuildGradle);\n    await regexFileAsync(`compile project(path: ':expoview')`, '', appBuildGradle);\n\n    // Don't need to compile expoview or ReactAndroid\n    // react-native link looks for a \\n so we need that. See https://github.com/facebook/react-native/blob/master/local-cli/link/android/patches/makeSettingsPatch.js\n    await fs.writeFile(path.join(shellPath, 'settings.gradle'), `include ':app'\\n`);\n\n    await regexFileAsync(\n      'TEMPLATE_INITIAL_URL',\n      url,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'MainActivity.java'\n      )\n    );\n  }\n\n  // Package\n  await regexFileAsync(\n    `applicationId 'host.exp.exponent'`,\n    `applicationId '${javaPackage}'`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n  await regexFileAsync(\n    `android:name=\"host.exp.exponent\"`,\n    `android:name=\"${javaPackage}\"`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Versions\n  let buildGradleFile = await fs.readFileSync(path.join(shellPath, 'app', 'build.gradle'), 'utf8');\n  let androidVersion = buildGradleFile.match(/versionName '(\\S+)'/)[1];\n  await regexFileAsync(\n    'VERSION_NAME = null',\n    `VERSION_NAME = \"${androidVersion}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n  await deleteLinesInFileAsync(\n    `BEGIN\\ VERSIONS`,\n    `END\\ VERSIONS`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n  await regexFileAsync(\n    '// ADD VERSIONS HERE',\n    `versionCode ${versionCode}\n    versionName '${version}'`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n\n  // Remove Exponent build script\n  if (!isDetached) {\n    await regexFileAsync(\n      `preBuild.dependsOn generateDynamicMacros`,\n      ``,\n      path.join(shellPath, 'expoview', 'build.gradle')\n    );\n  }\n\n  // change javaMaxHeapSize\n  await regexFileAsync(\n    `javaMaxHeapSize \"8g\"`,\n    `javaMaxHeapSize \"6g\"`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n\n  // Push notifications\n  await regexFileAsync(\n    '\"package_name\": \"host.exp.exponent\"',\n    `\"package_name\": \"${javaPackage}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  ); // TODO: actually use the correct file\n\n  // TODO: probably don't need this in both places\n  await regexFileAsync(\n    /host\\.exp\\.exponent\\.permission\\.C2D_MESSAGE/g,\n    `${javaPackage}.permission.C2D_MESSAGE`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n  if (!isDetached) {\n    await regexFileAsync(\n      /host\\.exp\\.exponent\\.permission\\.C2D_MESSAGE/g,\n      `${javaPackage}.permission.C2D_MESSAGE`,\n      path.join(shellPath, 'expoview', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Set INITIAL_URL, SHELL_APP_SCHEME and SHOW_LOADING_VIEW\n  await regexFileAsync(\n    'INITIAL_URL = null',\n    `INITIAL_URL = \"${url}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n  if (scheme) {\n    await regexFileAsync(\n      'SHELL_APP_SCHEME = null',\n      `SHELL_APP_SCHEME = \"${scheme}\"`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n  if (shouldShowLoadingView(manifest)) {\n    await regexFileAsync(\n      'SHOW_LOADING_VIEW_IN_SHELL_APP = false',\n      'SHOW_LOADING_VIEW_IN_SHELL_APP = true',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n  if (isDetached) {\n    await regexFileAsync(\n      'IS_DETACHED = false',\n      `IS_DETACHED = true`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  // App name\n  await regexFileAsync(\n    '\"app_name\">Expo',\n    `\"app_name\">${xmlWeirdAndroidEscape(name)}`,\n    path.join(shellPath, 'app', 'src', 'main', 'res', 'values', 'strings.xml')\n  );\n\n  // Splash Screen background color\n  await regexFileAsync(\n    '\"splashBackground\">#FFFFFF',\n    `\"splashBackground\">${splashBackgroundColor}`,\n    path.join(shellPath, 'app', 'src', 'main', 'res', 'values', 'colors.xml')\n  );\n\n  // show only background color if LoadingView will appear\n  if (shouldShowLoadingView(manifest)) {\n    await regexFileAsync(\n      /<item>.*<\\/item>/,\n      '',\n      path.join(shellPath, 'app', 'src', 'main', 'res', 'drawable', 'splash_background.xml')\n    );\n  }\n\n  // Remove exp:// scheme from LauncherActivity\n  await deleteLinesInFileAsync(\n    `START\\ LAUNCHER\\ INTENT\\ FILTERS`,\n    `END\\ LAUNCHER\\ INTENT\\ FILTERS`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Remove LAUNCHER category from HomeActivity\n  await deleteLinesInFileAsync(\n    `START\\ HOME\\ INTENT\\ FILTERS`,\n    `END\\ HOME\\ INTENT\\ FILTERS`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  if (isDetached) {\n    // Add LAUNCHER category to MainActivity\n    await regexFileAsync(\n      '<!-- ADD DETACH INTENT FILTERS HERE -->',\n      `<intent-filter>\n        <action android:name=\"android.intent.action.MAIN\"/>\n\n        <category android:name=\"android.intent.category.LAUNCHER\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  } else {\n    // Add LAUNCHER category to ShellAppActivity\n    await regexFileAsync(\n      '<!-- ADD SHELL INTENT FILTERS HERE -->',\n      `<intent-filter>\n        <action android:name=\"android.intent.action.MAIN\"/>\n\n        <category android:name=\"android.intent.category.LAUNCHER\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Add shell app scheme\n  if (scheme) {\n    await regexFileAsync(\n      '<!-- ADD SHELL SCHEME HERE -->',\n      `<intent-filter>\n        <data android:scheme=\"${scheme}\"/>\n\n        <action android:name=\"android.intent.action.VIEW\"/>\n\n        <category android:name=\"android.intent.category.DEFAULT\"/>\n        <category android:name=\"android.intent.category.BROWSABLE\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Add permissions\n  if (manifest.android && manifest.android.permissions) {\n    const content = await fs.readFileSync(\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml'),\n      'utf-8'\n    );\n\n    // Get the list of optional permissions form manifest\n    const permissions = content\n      .replace(\n        /(([\\s\\S]*<!-- BEGIN OPTIONAL PERMISSIONS -->)|(<!-- END OPTIONAL PERMISSIONS -->[\\s\\S]*))/g,\n        ''\n      )\n      .match(/android:name=\".+\"/g)\n      .map(p => p.replace(/(android:name=|\")/g, ''));\n\n    const whitelist = [];\n\n    manifest.android.permissions.forEach(s => {\n      if (s.includes('.')) {\n        whitelist.push(s);\n      } else {\n        permissions.forEach(identifier => {\n          if (identifier.split('.').pop() === s) {\n            whitelist.push(identifier);\n          }\n        });\n      }\n    });\n\n    // Permissions we need to remove from the generated manifest\n    const blacklist = [\n      'android.permission.ACCESS_COARSE_LOCATION',\n      'android.permission.ACCESS_FINE_LOCATION',\n      'android.permission.CAMERA',\n      'android.permission.MANAGE_DOCUMENTS',\n      'android.permission.READ_CONTACTS',\n      'android.permission.READ_CALENDAR',\n      'android.permission.WRITE_CALENDAR',\n      'android.permission.READ_EXTERNAL_STORAGE',\n      'android.permission.READ_INTERNAL_STORAGE',\n      'android.permission.READ_PHONE_STATE',\n      'android.permission.RECORD_AUDIO',\n      'android.permission.USE_FINGERPRINT',\n      'android.permission.VIBRATE',\n      'android.permission.WRITE_EXTERNAL_STORAGE',\n      'com.anddoes.launcher.permission.UPDATE_COUNT',\n      'com.android.launcher.permission.INSTALL_SHORTCUT',\n      'com.google.android.gms.permission.ACTIVITY_RECOGNITION',\n      'com.google.android.providers.gsf.permission.READ_GSERVICES',\n      'com.htc.launcher.permission.READ_SETTINGS',\n      'com.htc.launcher.permission.UPDATE_SHORTCUT',\n      'com.majeur.launcher.permission.UPDATE_BADGE',\n      'com.sec.android.provider.badge.permission.READ',\n      'com.sec.android.provider.badge.permission.WRITE',\n      'com.sonyericsson.home.permission.BROADCAST_BADGE',\n    ].filter(p => !whitelist.includes(p));\n\n    await deleteLinesInFileAsync(\n      `BEGIN\\ OPTIONAL\\ PERMISSIONS`,\n      `END\\ OPTIONAL\\ PERMISSIONS`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n\n    await regexFileAsync(\n      '<!-- ADD PERMISSIONS HERE -->',\n      `\n      ${whitelist.map(p => `<uses-permission android:name=\"${p}\" />`).join('\\n')}\n      ${blacklist\n        .map(p => `<uses-permission android:name=\"${p}\" tools:node=\"remove\" />`)\n        .join('\\n')}\n      `,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // OAuth redirect scheme\n  await regexFileAsync(\n    '<data android:scheme=\"host.exp.exponent\" android:path=\"oauthredirect\"/>',\n    `<data android:scheme=\"${javaPackage}\" android:path=\"oauthredirect\"/>`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Embed manifest and bundle\n  if (isFullManifest) {\n    await fs.writeFileSync(\n      path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'),\n      JSON.stringify(manifest)\n    );\n    await saveUrlToPathAsync(\n      bundleUrl,\n      path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle')\n    );\n\n    await regexFileAsync(\n      '// START EMBEDDED RESPONSES',\n      `\n      // START EMBEDDED RESPONSES\n      embeddedResponses.add(new Constants.EmbeddedResponse(\"${fullManifestUrl}\", \"assets://shell-app-manifest.json\", \"application/json\"));\n      embeddedResponses.add(new Constants.EmbeddedResponse(\"${bundleUrl}\", \"assets://shell-app.bundle\", \"application/javascript\"));`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  await regexFileAsync(\n    'RELEASE_CHANNEL = \"default\"',\n    `RELEASE_CHANNEL = \"${releaseChannel}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  // Icon\n  if (iconUrl) {\n    (await globby(['**/ic_launcher.png'], {\n      cwd: path.join(shellPath, 'app', 'src', 'main', 'res'),\n      absolute: true,\n    })).forEach(filePath => {\n      fs.removeSync(filePath);\n    });\n\n    await copyIconsToResSubfolders(\n      path.join(shellPath, 'app', 'src', 'main', 'res'),\n      'mipmap',\n      'ic_launcher.png',\n      iconUrl,\n      isDetached\n    );\n  }\n\n  if (notificationIconUrl) {\n    (await globby(['**/shell_notification_icon.png'], {\n      cwd: path.join(shellPath, 'app', 'src', 'main', 'res'),\n      absolute: true,\n    })).forEach(filePath => {\n      fs.removeSync(filePath);\n    });\n\n    await copyIconsToResSubfolders(\n      path.join(shellPath, 'app', 'src', 'main', 'res'),\n      'drawable',\n      'shell_notification_icon.png',\n      notificationIconUrl,\n      isDetached\n    );\n  }\n\n  // Splash Background\n  if (backgroundImages && backgroundImages.length > 0) {\n    // Delete the placeholder images\n    (await globby(['**/shell_launch_background_image.png'], {\n      cwd: path.join(shellPath, 'app', 'src', 'main', 'res'),\n      absolute: true,\n    })).forEach(filePath => {\n      fs.removeSync(filePath);\n    });\n\n    _.forEach(backgroundImages, async image => {\n      await saveUrlToPathAsync(image.url, image.path);\n    });\n  }\n\n  if (manifest.bundledAssets) {\n    await downloadAssetsAsync(manifest.bundledAssets, `${shellPath}/app/src/main/assets`);\n  }\n\n  let certificateHash = '';\n  let googleAndroidApiKey = '';\n  let privateConfig = context.data.privateConfig;\n  if (privateConfig) {\n    let branch = privateConfig.branch;\n    let fabric = privateConfig.fabric;\n    let googleMaps = privateConfig.googleMaps;\n    let googleSignIn = privateConfig.googleSignIn;\n\n    // Branch\n    if (branch) {\n      await regexFileAsync(\n        '<!-- ADD BRANCH CONFIG HERE -->',\n        `<meta-data\n      android:name=\"io.branch.sdk.BranchKey\"\n      android:value=\"${branch.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Fabric\n    if (fabric) {\n      await fs.remove(path.join(shellPath, 'app', 'fabric.properties'));\n      await fs.writeFileSync(\n        path.join(shellPath, 'app', 'fabric.properties'),\n        `apiSecret=${fabric.buildSecret}\\n`\n      );\n\n      await deleteLinesInFileAsync(\n        `BEGIN\\ FABRIC\\ CONFIG`,\n        `END\\ FABRIC\\ CONFIG`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n      await regexFileAsync(\n        '<!-- ADD FABRIC CONFIG HERE -->',\n        `<meta-data\n      android:name=\"io.fabric.ApiKey\"\n      android:value=\"${fabric.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Google Maps\n    if (googleMaps) {\n      await deleteLinesInFileAsync(\n        `BEGIN\\ GOOGLE\\ MAPS\\ CONFIG`,\n        `END\\ GOOGLE\\ MAPS\\ CONFIG`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n      await regexFileAsync(\n        '<!-- ADD GOOGLE MAPS CONFIG HERE -->',\n        `<meta-data\n      android:name=\"com.google.android.geo.API_KEY\"\n      android:value=\"${googleMaps.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Google Login\n    if (googleSignIn) {\n      certificateHash = googleSignIn.certificateHash;\n      googleAndroidApiKey = googleSignIn.apiKey;\n    }\n  }\n\n  // Google sign in\n  await regexFileAsync(\n    /\"current_key\": \"(.*?)\"/,\n    `\"current_key\": \"${googleAndroidApiKey}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  );\n  await regexFileAsync(\n    /\"certificate_hash\": \"(.*?)\"/,\n    `\"certificate_hash\": \"${certificateHash}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  );\n}\n\nasync function buildShellAppAsync(context: StandaloneContext) {\n  let shellPath = shellPathForContext(context);\n\n  if (context.build.android) {\n    let androidBuildConfiguration = context.build.android;\n\n    try {\n      await fs.remove(`shell-unaligned.apk`);\n      await fs.remove(`shell.apk`);\n    } catch (e) {}\n    const gradleArgs = [`assembleProdRelease`];\n    if (process.env.GRADLE_DAEMON_DISABLED) {\n      gradleArgs.unshift('--no-daemon');\n    }\n    await spawnAsyncThrowError(`./gradlew`, gradleArgs, {\n      stdio: 'inherit',\n      cwd: shellPath,\n    });\n    await fs.copy(\n      path.join(shellPath, 'app', 'build', 'outputs', 'apk', 'app-prod-release-unsigned.apk'),\n      `shell-unaligned.apk`\n    );\n    await spawnAsync(`jarsigner`, [\n      '-verbose',\n      '-sigalg',\n      'SHA1withRSA',\n      '-digestalg',\n      'SHA1',\n      '-storepass',\n      androidBuildConfiguration.keystorePassword,\n      '-keypass',\n      androidBuildConfiguration.keyPassword,\n      '-keystore',\n      androidBuildConfiguration.keystore,\n      'shell-unaligned.apk',\n      androidBuildConfiguration.keyAlias,\n    ]);\n    await spawnAsync(`zipalign`, ['-v', '4', 'shell-unaligned.apk', 'shell.apk']);\n    try {\n      await fs.remove('shell-unaligned.apk');\n    } catch (e) {}\n    await spawnAsync(`jarsigner`, [\n      '-verify',\n      '-verbose',\n      '-certs',\n      '-keystore',\n      androidBuildConfiguration.keystore,\n      'shell.apk',\n    ]);\n    await fs.copy('shell.apk', androidBuildConfiguration.outputFile || '/tmp/shell-signed.apk');\n  } else {\n    try {\n      await fs.remove('shell-debug.apk');\n    } catch (e) {}\n    await spawnAsyncThrowError(`./gradlew`, ['assembleDevRemoteKernelDebug'], {\n      stdio: 'inherit',\n      cwd: shellPath,\n    });\n    await fs.copy(\n      path.join(shellPath, 'app', 'build', 'outputs', 'apk', 'app-devRemoteKernel-debug.apk'),\n      `/tmp/shell-debug.apk`\n    );\n  }\n}\n\nasync function downloadAssetsAsync(assets, dest) {\n  // Compat with exp 46.x.x, can remove when this version is phasing out.\n  if (typeof assets[0] === 'object') {\n    assets = assets.reduce(\n      (res, cur) =>\n        res.concat(cur.fileHashes.map(h => 'asset_' + h + (cur.type ? '.' + cur.type : ''))),\n      []\n    );\n  }\n\n  await fs.ensureDir(dest);\n  const batches = _.chunk(assets, 5);\n  for (const batch of batches) {\n    await Promise.all(\n      batch.map(async asset => {\n        const extensionIndex = asset.lastIndexOf('.');\n        const prefixLength = 'asset_'.length;\n        const hash =\n          extensionIndex >= 0\n            ? asset.substring(prefixLength, extensionIndex)\n            : asset.substring(prefixLength);\n        await saveUrlToPathAsync(\n          'https://d1wp6m56sqw74a.cloudfront.net/~assets/' + hash,\n          path.join(dest, asset)\n        );\n      })\n    );\n  }\n}\n"],"sourceRoot":"/xdl/src"}