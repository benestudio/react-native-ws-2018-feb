{"version":3,"sources":["__integration_tests__/Template-test.js"],"names":["jasmine","DEFAULT_TIMEOUT_INTERVAL","describe","xit","async"],"mappings":";;AAKA;;;;AACA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;;;AAJAA,QAAQC,wBAARD,GAAmC,MAAnCA;;;AAMAE,SAAS,eAATA,EAA0B,MAAM;AAC9BC,MAAI,yDAAJA,oBAA+DC,aAAY;AACzE;AACA;;;;;;;;;;;;;;;;;;;;;;;AAyBD,GA3BDD;AA4BD,CA7BDD","file":"../../__integration_tests__/Template-test.js","sourcesContent":["/**\n * @flow\n */\n\njasmine.DEFAULT_TIMEOUT_INTERVAL = 240000;\nimport path from 'path';\nimport uuid from 'uuid';\nimport rimraf from 'rimraf';\nimport { clearXDLCacheAsync, downloadTemplateApp, extractTemplateApp } from '../Exp';\n\ndescribe('Template Apps', () => {\n  xit('should download the starter app template and extract it', async () => {\n    // This was working locally but failing on the mac ci machine\n    /*\n    process.env.UNSAFE_EXPO_HOME_DIRECTORY = path.join(\n      '/',\n      'tmp',\n      `.expo-${uuid.v1()}`\n    );\n\n    await clearXDLCacheAsync();\n    let dir = path.join('/', 'tmp', `.expo-${uuid.v1()}`);\n    let templateDownload = await downloadTemplateApp('tabs', dir, {\n      name: `test-template-${new Date().valueOf()}`,\n      progressFunction: () => {},\n      retryFunction: () => {},\n    });\n    expect(templateDownload).not.toBeNull();\n    // Extract the template we just downloaded\n    let projectRoot = await extractTemplateApp(\n      templateDownload.starterAppPath,\n      templateDownload.name,\n      templateDownload.root\n    );\n\n    rimraf.sync(process.env.UNSAFE_EXPO_HOME_DIRECTORY);\n    rimraf.sync(dir);\n    */\n  });\n});\n"],"sourceRoot":"/xdl/src"}