{"version":3,"sources":["state/reducers/projects.js"],"names":["actions","selectPackagerPane","projectRoot","type","selectNotificationsPane","togglePane","TOGGLE","PACKAGER_PANE","NOTIFICATIONS_PANE","INITIAL_PROJECT_STATE","selectedLeftPane","isPackagerSelected","isNotificationsSelected","reducer","state","action","_selectPane","pane","let","projectObject","newState","JSON","parse","stringify"],"mappings":";;;;;AAIO,MAAMA,4BAAU;AACrBC,sBAAqBC,WAAD,IAAyB;AAC3C,WAAO;AACLC,YAAM,sBADD;AAELD;AAFK,KAAP;AAID,GANoB;;AAQrBE,2BAA0BF,WAAD,IAAyB;AAChD,WAAO;AACLC,YAAM,2BADD;AAELD;AAFK,KAAP;AAID,GAboB;;AAerBG,cAAaH,WAAD,IAAyB;AACnC,WAAO;AACLC,YAAM,aADD;AAELD;AAFK,KAAP;AAID;AApBoB,CAAhB;;AAuBP,MAAMI,SAAS,CAAC,CAAhB;AACA,MAAMC,gBAAgB,CAAtB;AACA,MAAMC,qBAAqB,CAA3B;;AAEA,MAAMC,wBAAwB;AAC5BC,oBAAkBH,aADU;AAE5BI,sBAAoB,IAFQ;AAG5BC,2BAAyB;AAHG,CAA9B;;AAMO,MAAMC,4BAAU,CAACC,QAAa,EAAd,EAAkBC,MAAlB,KAAkC;AACvD,UAAQA,OAAOZ,IAAf;AACE,SAAK,sBAAL;AACE,aAAOa,YAAYF,KAAZE,EAAmBD,MAAnBC,EAA2BT,aAA3BS,CAAP;AACF,SAAK,2BAAL;AACE,aAAOA,YAAYF,KAAZE,EAAmBD,MAAnBC,EAA2BR,kBAA3BQ,CAAP;AACF,SAAK,aAAL;AACE,aAAOA,YAAYF,KAAZE,EAAmBD,MAAnBC,EAA2BV,MAA3BU,CAAP;AACF;AACE,aAAOF,KAAP;AARJ;AAUD,CAXM;;AAaP,SAASE,WAAT,CAAqBF,KAArB,EAAiCC,MAAjC,EAA8CE,IAA9C,EAA4D;AAC1DC,MAAI,EAAEhB,WAAF,KAAkBa,MAAtBG;;AAEAA,MAAIC,gBAAgBL,MAAMZ,WAANY,KAAsBL,qBAA1CS;AACA,MAAID,SAASX,MAAb,EAAqB;AACnBW,WAAOE,cAAcT,gBAAdS,KAAmCZ,aAAnCY,GAAmDX,kBAAnDW,GAAwEZ,aAA/EU;AACF;;AAEAE,gBAAcT,gBAAdS,GAAiCF,IAAjCE;AACAA,gBAAcR,kBAAdQ,GAAmCF,SAASV,aAA5CY;AACAA,gBAAcP,uBAAdO,GAAwCF,SAAST,kBAAjDW;;AAEA;AACAD,MAAIE,WAAWC,KAAKC,KAALD,CAAWA,KAAKE,SAALF,CAAeP,KAAfO,CAAXA,CAAfH;AACAE,WAASlB,WAATkB,IAAwBD,aAAxBC;;AAEA,SAAOA,QAAP;AACF","file":"../../../state/reducers/projects.js","sourcesContent":["/**\n * @flow\n */\n\nexport const actions = {\n  selectPackagerPane: (projectRoot: string) => {\n    return {\n      type: 'SELECT_PACKAGER_PANE',\n      projectRoot,\n    };\n  },\n\n  selectNotificationsPane: (projectRoot: string) => {\n    return {\n      type: 'SELECT_NOTIFICATIONS_PANE',\n      projectRoot,\n    };\n  },\n\n  togglePane: (projectRoot: string) => {\n    return {\n      type: 'TOGGLE_PANE',\n      projectRoot,\n    };\n  },\n};\n\nconst TOGGLE = -1;\nconst PACKAGER_PANE = 0;\nconst NOTIFICATIONS_PANE = 1;\n\nconst INITIAL_PROJECT_STATE = {\n  selectedLeftPane: PACKAGER_PANE,\n  isPackagerSelected: true,\n  isNotificationsSelected: false,\n};\n\nexport const reducer = (state: any = {}, action: any) => {\n  switch (action.type) {\n    case 'SELECT_PACKAGER_PANE':\n      return _selectPane(state, action, PACKAGER_PANE);\n    case 'SELECT_NOTIFICATIONS_PANE':\n      return _selectPane(state, action, NOTIFICATIONS_PANE);\n    case 'TOGGLE_PANE':\n      return _selectPane(state, action, TOGGLE);\n    default:\n      return state;\n  }\n};\n\nfunction _selectPane(state: any, action: any, pane: number) {\n  let { projectRoot } = action;\n\n  let projectObject = state[projectRoot] || INITIAL_PROJECT_STATE;\n  if (pane === TOGGLE) {\n    pane = projectObject.selectedLeftPane === PACKAGER_PANE ? NOTIFICATIONS_PANE : PACKAGER_PANE;\n  }\n\n  projectObject.selectedLeftPane = pane;\n  projectObject.isPackagerSelected = pane === PACKAGER_PANE;\n  projectObject.isNotificationsSelected = pane === NOTIFICATIONS_PANE;\n\n  // TODO: switch to immutable.js\n  let newState = JSON.parse(JSON.stringify(state));\n  newState[projectRoot] = projectObject;\n\n  return newState;\n}\n"],"sourceRoot":"/xdl/src"}