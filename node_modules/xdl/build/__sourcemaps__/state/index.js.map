{"version":3,"sources":["state/index.js"],"names":["reducers","notifications","reducer","projects","store","createXDLStore","actions","connect","mapStateToProps","mapDispatchToProps","mergeProps","options","reduxConnect","storeKey"],"mappings":";;;;;;;;;;;AAIA;AAAA;AAAA;;;;AAEA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;AAEA;AACO,MAAMA,8BAAW;AACtBC,iBAAeA,0CAAcC,OADP;AAEtBC,YAAUA,gCAASD;AAFG,CAAjB;;AAKA,MAAME,wBAAQC,8CAAeL,QAAfK,CAAd;;AAEP;AACO,MAAMC,4BAAU;AACrBL,iBAAeA,0CAAcK,OADR;AAErBH,YAAUA,gCAASG;AAFE,CAAhB;;AAKA,MAAMC,4BAAU,CACrBC,eADqB,EAErBC,kBAFqB,EAGrBC,UAHqB,EAIrBC,UAAe,EAJM,KAKlB;AACH,SAAOC,iDAAaJ,eAAbI,EAA8BH,kBAA9BG,EAAkDF,UAAlDE;AACLC,cAAU;AADLD,KAEFD,OAFEC,EAAP;AAID,CAVM","file":"../../state/index.js","sourcesContent":["/**\n * @flow\n */\n\nimport { connect as reduxConnect } from 'react-redux';\n\nimport * as notifications from './reducers/notifications';\nimport * as projects from './reducers/projects';\nimport { createXDLStore } from './store';\n\n// Reducers\nexport const reducers = {\n  notifications: notifications.reducer,\n  projects: projects.reducer,\n};\n\nexport const store = createXDLStore(reducers);\n\n// Actions\nexport const actions = {\n  notifications: notifications.actions,\n  projects: projects.actions,\n};\n\nexport const connect = (\n  mapStateToProps: any,\n  mapDispatchToProps: any,\n  mergeProps: any,\n  options: any = {}\n) => {\n  return reduxConnect(mapStateToProps, mapDispatchToProps, mergeProps, {\n    storeKey: 'xdlStore',\n    ...options,\n  });\n};\n"],"sourceRoot":"/xdl/src"}