{"version":3,"sources":["state/store.js"],"names":["createXDLStore","getStore","let","_store","reducers","reducer","combineReducers","middleware","process","env","NODE_ENV","logger","createLogger","collapsed","push","enhancer","compose","applyMiddleware","store","createStore","module","hot","accept","nextReducers","require","replaceReducer"],"mappings":";;;;;QASgBA,c,GAAAA,c;QA8BAC,Q,GAAAA,Q;;;;AAnChB;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;AAEAC,IAAIC,MAAJD;;AAEO,SAASF,cAAT,CAAwBI,QAAxB,EAAuC;AAC5C,QAAMC,UAAUC,+CAAgBF,QAAhBE,CAAhB;;AAEA,QAAMC,aAAa,EAAnB;;AAEA;AACA,MAAIC,QAAQC,GAARD,CAAYE,QAAZF,KAAyB,aAA7B,EAA4C;AAC1C,UAAMG,SAASC,mDAAa;AAC1BC,iBAAW;AADe,KAAbD,CAAf;AAGAL,eAAWO,IAAXP,CAAgBI,MAAhBJ;AACF;;AAEA,QAAMQ,WAAWC,uCAAQC,+CAAgB,GAAGV,UAAnBU,CAARD,CAAjB;;AAEA,QAAME,QAAQC,2CAAYd,OAAZc,EAAqBJ,QAArBI,CAAd;;AAEA;AACA,MAAIC,OAAOC,GAAX,EAAgB;AACd;AACAD,WAAOC,GAAPD,CAAWE,MAAXF,CAAkB,IAAlBA,EAAwB,MAAM;AAC5B,YAAMG,eAAeC,QAAQ,IAARA,EAAcpB,QAAnC;AACAc,YAAMO,cAANP,CAAqBZ,+CAAgBiB,YAAhBjB,CAArBY;AACD,KAHDE;AAIF;;AAEAjB,WAASe,KAATf;AACA,SAAOe,KAAP;AACF;;AAEO,SAASjB,QAAT,GAAoB;AACzB,SAAOE,MAAP;AACF","file":"../../state/store.js","sourcesContent":["/**\n * @flow\n */\n\nimport { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport createLogger from 'redux-logger';\n\nlet _store;\n\nexport function createXDLStore(reducers: any) {\n  const reducer = combineReducers(reducers);\n\n  const middleware = [];\n\n  // Only enable logging in development\n  if (process.env.NODE_ENV === 'development') {\n    const logger = createLogger({\n      collapsed: true,\n    });\n    middleware.push(logger);\n  }\n\n  const enhancer = compose(applyMiddleware(...middleware));\n\n  const store = createStore(reducer, enhancer);\n\n  // Enable Webpack hot module replacement for reducers :)\n  if (module.hot) {\n    // $FlowFixMe\n    module.hot.accept('./', () => {\n      const nextReducers = require('./').reducers;\n      store.replaceReducer(combineReducers(nextReducers));\n    });\n  }\n\n  _store = store;\n  return store;\n}\n\nexport function getStore() {\n  return _store;\n}\n"],"sourceRoot":"/xdl/src"}