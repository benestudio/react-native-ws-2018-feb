{"version":3,"sources":["__tests__/Versions-test.js"],"names":["jest","mock","request","require","Versions","__setMockResponse","body","iosVersion","androidVersion","sdkVersions","expoReactNativeTag","facebookReactNativeVersion","describe","it","async","let","facebookReactNativeVersions","await","facebookReactNativeVersionsAsync","expect","toEqual","expoVersion","facebookReactNativeVersionToExpoVersionAsync"],"mappings":"AAAA;;;;AAEAA,KAAKC,IAALD,CAAU,gBAAVA;AACAA,KAAKC,IAALD,CAAU,IAAVA;AACAA,KAAKC,IAALD,CAAU,QAAVA;AACAA,KAAKC,IAALD,CAAU,SAAVA;;AAEA,MAAME,UAAUC,QAAQ,SAARA,CAAhB;AACA,MAAMC,WAAWD,QAAQ,aAARA,CAAjB;;AAEAD,QAAQG,iBAARH,CAA0B;AACxBI,QAAM;AACJC,gBAAY,OADR;AAEJC,oBAAgB,OAFZ;AAGJC,iBAAa;AACX,eAAS;AACPC,4BAAoB,WADb;AAEPC,oCAA4B;AAFrB,OADE;AAKX,eAAS;AACPD,4BAAoB,WADb;AAEPC,oCAA4B;AAFrB,OALE;AASX,eAAS;AACPD,4BAAoB,WADb;AAEPC,oCAA4B;AAFrB;AATE;AAHT;AADkB,CAA1BT;;AAqBAU,SAAS,kCAATA,EAA6C,MAAM;AACjDC,KAAG,oCAAHA,oBAAyCC,aAAY;AACnDC,QAAIC,8BAA8BC,MAAMb,SAASc,gCAATd,EAAxCW;AACAI,WAAOH,2BAAPG,EAAoCC,OAApCD,CAA4C,CAAC,QAAD,EAAW,QAAX,CAA5CA;AACD,GAHDN;AAID,CALDD;;AAOAA,SAAS,8CAATA,EAAyD,MAAM;AAC7DC,KAAG,qCAAHA,oBAA0CC,aAAY;AACpDC,QAAIM,cAAcJ,MAAMb,SAASkB,4CAATlB,CAAsD,QAAtDA,CAAxBW;AACAI,WAAOE,WAAPF,EAAoBC,OAApBD,CAA4B,OAA5BA;AACD,GAHDN;;AAKAA,KAAG,0DAAHA,oBAA+DC,aAAY;AACzEC,QAAIM,cAAcJ,MAAMb,SAASkB,4CAATlB,CAAsD,QAAtDA,CAAxBW;AACAI,WAAOE,WAAPF,EAAoBC,OAApBD,CAA4B,OAA5BA;AACD,GAHDN;;AAKAA,KAAG,uBAAHA,oBAA4BC,aAAY;AACtCC,QAAIM,cAAcJ,MAAMb,SAASkB,4CAATlB,CAAsD,QAAtDA,CAAxBW;AACAI,WAAOE,WAAPF,EAAoBC,OAApBD,CAA4B,OAA5BA;AACD,GAHDN;;AAKAA,KAAG,8CAAHA,oBAAmDC,aAAY;AAC7DC,QAAIM,cAAcJ,MAAMb,SAASkB,4CAATlB,CAAsD,QAAtDA,CAAxBW;AACAI,WAAOE,WAAPF,EAAoBC,OAApBD,CAA4B,IAA5BA;AACD,GAHDN;AAID,CApBDD","file":"../../__tests__/Versions-test.js","sourcesContent":["'use strict';\n\njest.mock('analytics-node');\njest.mock('fs');\njest.mock('../Env');\njest.mock('request');\n\nconst request = require('request');\nconst Versions = require('../Versions');\n\nrequest.__setMockResponse({\n  body: {\n    iosVersion: '1.6.0',\n    androidVersion: '1.6.0',\n    sdkVersions: {\n      '5.0.0': {\n        expoReactNativeTag: 'sdk-5.0.0',\n        facebookReactNativeVersion: '0.24.0',\n      },\n      '6.0.0': {\n        expoReactNativeTag: 'sdk-6.0.0',\n        facebookReactNativeVersion: '0.27.0',\n      },\n      '7.0.0': {\n        expoReactNativeTag: 'sdk-7.0.0',\n        facebookReactNativeVersion: '0.27.0',\n      },\n    },\n  },\n});\n\ndescribe('facebookReactNativeVersionsAsync', () => {\n  it('checks list of versions is correct', async () => {\n    let facebookReactNativeVersions = await Versions.facebookReactNativeVersionsAsync();\n    expect(facebookReactNativeVersions).toEqual(['0.24.0', '0.27.0']);\n  });\n});\n\ndescribe('facebookReactNativeVersionToExpoVersionAsync', () => {\n  it('returns expo version when available', async () => {\n    let expoVersion = await Versions.facebookReactNativeVersionToExpoVersionAsync('0.24.0');\n    expect(expoVersion).toEqual('5.0.0');\n  });\n\n  it('returns newest expo version when multiple versions exist', async () => {\n    let expoVersion = await Versions.facebookReactNativeVersionToExpoVersionAsync('0.27.0');\n    expect(expoVersion).toEqual('7.0.0');\n  });\n\n  it('ignores patch version', async () => {\n    let expoVersion = await Versions.facebookReactNativeVersionToExpoVersionAsync('0.27.3');\n    expect(expoVersion).toEqual('7.0.0');\n  });\n\n  it('returns null when no matching version exists', async () => {\n    let expoVersion = await Versions.facebookReactNativeVersionToExpoVersionAsync('0.23.0');\n    expect(expoVersion).toEqual(null);\n  });\n});\n"],"sourceRoot":"/xdl/src"}