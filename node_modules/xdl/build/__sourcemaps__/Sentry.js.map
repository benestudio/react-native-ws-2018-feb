{"version":3,"sources":["Sentry.js"],"names":["logError","let","Raven","SENTRY_DSN","global","XMLHttpRequest","require","config","install","message","tags","captureMessage"],"mappings":";;;;;;;;QAyBgBA,Q,GAAAA,Q;AArBhBC,IAAIC,KAAJD;AACAA,IAAIE,UAAJF;;AAEA,IAAIG,OAAOC,cAAX,EAA2B;AACzB;AACAH,UAAQI,QAAQ,UAARA,CAARJ;AACAC,eAAa,2DAAbA;AACF,CAJA,MAIO;AACL;AACAD,UAAQI,QAAQ,OAARA,CAARJ;AACAC,eAAc;;GAAdA;AAGF;;AAEAD,MAAMK,MAANL,CAAaC,UAAbD,EAAyBM,OAAzBN;;AAMO,SAASF,QAAT,CAAkBS,OAAlB,EAAmC,EAAEC,IAAF,EAAnC,EAAsE;AAC3E;AACA;AACAR,QAAMS,cAANT,CAAqBO,OAArBP,EAA8B;AAC5BQ,uBACKA,IADLA;AAD4B,GAA9BR;AAKF","file":"../Sentry.js","sourcesContent":["/**\n * @flow\n */\n\nlet Raven;\nlet SENTRY_DSN;\n\nif (global.XMLHttpRequest) {\n  // use browser version and DSN for xde\n  Raven = require('raven-js');\n  SENTRY_DSN = 'https://8554f14d112d4ed4b0558154762760ef@sentry.io/194120';\n} else {\n  // use node version and DSN for crna and exp\n  Raven = require('raven');\n  SENTRY_DSN = `\n    https://8554f14d112d4ed4b0558154762760ef:bae5673d5e5243abac5563d70861b5d8@sentry.io/194120\n  `;\n}\n\nRaven.config(SENTRY_DSN).install();\n\ntype TagType = {\n  [key: string]: string,\n};\n\nexport function logError(message: string, { tags }: { tags: TagType }): void {\n  // send error to Sentry\n  // add `testing: true` to tags to avoid sending an email when testing\n  Raven.captureMessage(message, {\n    tags: {\n      ...tags,\n    },\n  });\n}\n"],"sourceRoot":"/xdl/src"}