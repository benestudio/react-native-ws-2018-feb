{"version":3,"sources":["project/ProjectUtils.js"],"names":["async","file","await","fsp","stat","isFile","e","fileExistsAsync","projectRoot","appJsonExists","path","join","expJsonExists","Config","developerTool","configFilenameAsync","expRcPath","fs","existsSync","json5","readAsync","logError","toString","readExpRcAsync","configPath","customConfigPaths","setCustomConfigPath","let","exp","pkg","configName","basename","expo","isJsonFileError","message","startsWith","cause","packageJsonPath","nodeModulesPath","resolve","name","slug","toLowerCase","version","readConfigJsonAsync","logWithLevel","logDebug","logInfo","logWarning","clearNotification","attachLoggerStream","MAX_MESSAGE_LENGTH","_projectRootToLogger","_getLogger","logger","Logger","child","type","project","level","object","msg","id","useRedux","useReduxNotifications","debug","info","warn","error","state","store","dispatch","actions","notifications","add","tag","truncatedMessage","length","substring","Analytics","logEvent","clear","stream","addStream"],"mappings":"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","file":"../../project/ProjectUtils.js","sourcesContent":["/**\n * @flow\n */\n\nimport fs from 'fs';\nimport fsp from 'mz/fs';\nimport path from 'path';\n\nimport JsonFile from '@expo/json-file';\nimport slug from 'slugify';\n\nimport * as Analytics from '../Analytics';\nimport Config from '../Config';\nimport Logger from '../Logger';\nimport * as state from '../state';\n\nimport * as Sentry from '../Sentry';\n\nconst MAX_MESSAGE_LENGTH = 200;\nlet _projectRootToLogger = {};\n\nfunction _getLogger(projectRoot: string) {\n  let logger = _projectRootToLogger[projectRoot];\n  if (!logger) {\n    logger = Logger.child({\n      type: 'project',\n      project: path.resolve(projectRoot),\n    });\n    _projectRootToLogger[projectRoot] = logger;\n  }\n\n  return logger;\n}\n\nexport function logWithLevel(\n  projectRoot: string,\n  level: string,\n  object: any,\n  msg: string,\n  id: ?string\n) {\n  let useRedux = id && Config.useReduxNotifications;\n\n  let logger = _getLogger(projectRoot);\n  switch (level) {\n    case 'debug':\n      logger.debug(object, msg);\n      break;\n    case 'info':\n      logger.info(object, msg);\n      break;\n    case 'warn':\n      if (!useRedux) {\n        logger.warn(object, msg);\n      }\n      break;\n    case 'error':\n      if (!useRedux) {\n        logger.error(object, msg);\n      }\n      break;\n    default:\n      logger.debug(object, msg);\n      break;\n  }\n\n  if (useRedux && (level === 'warn' || level === 'error')) {\n    state.store.dispatch(state.actions.notifications.add(projectRoot, id, msg, projectRoot, level));\n  }\n}\n\nexport function logDebug(projectRoot: string, tag: string, message: string, id: ?string) {\n  _getLogger(projectRoot).debug({ tag }, message.toString());\n}\n\nexport function logInfo(projectRoot: string, tag: string, message: string, id: ?string) {\n  if (id && Config.useReduxNotifications) {\n    state.store.dispatch(state.actions.notifications.add(projectRoot, id, message, tag, 'info'));\n  } else {\n    _getLogger(projectRoot).info({ tag }, message.toString());\n  }\n}\n\nexport function logError(projectRoot: string, tag: string, message: string, id: ?string) {\n  if (id && Config.useReduxNotifications) {\n    state.store.dispatch(state.actions.notifications.add(projectRoot, id, message, tag, 'error'));\n  } else {\n    _getLogger(projectRoot).error({ tag }, message.toString());\n  }\n\n  let truncatedMessage = message.toString();\n  if (truncatedMessage.length > MAX_MESSAGE_LENGTH) {\n    truncatedMessage = truncatedMessage.substring(0, MAX_MESSAGE_LENGTH);\n  }\n\n  // temporarily remove sentry until we can trim events\n  // send error to Sentry\n  // Sentry.logError(message.toString(), {\n  //   tags: { tag },\n  // });\n}\n\nexport function logWarning(projectRoot: string, tag: string, message: string, id: ?string) {\n  if (id && Config.useReduxNotifications) {\n    state.store.dispatch(state.actions.notifications.add(projectRoot, id, message, tag, 'warn'));\n  } else {\n    _getLogger(projectRoot).warn({ tag }, message.toString());\n  }\n\n  let truncatedMessage = message.toString();\n  if (truncatedMessage.length > MAX_MESSAGE_LENGTH) {\n    truncatedMessage = truncatedMessage.substring(0, MAX_MESSAGE_LENGTH);\n  }\n  Analytics.logEvent('Project Warning', {\n    projectRoot,\n    tag,\n    message: truncatedMessage,\n  });\n}\n\nexport function clearNotification(projectRoot: string, id: string) {\n  if (Config.useReduxNotifications) {\n    state.store.dispatch(state.actions.notifications.clear(projectRoot, id));\n  }\n}\n\nexport function attachLoggerStream(projectRoot: string, stream: any) {\n  _getLogger(projectRoot).addStream(stream);\n}\n\nexport async function fileExistsAsync(file: string): Promise<boolean> {\n  try {\n    return (await fsp.stat(file)).isFile();\n  } catch (e) {\n    return false;\n  }\n}\n\nexport async function configFilenameAsync(projectRoot: string): Promise<string> {\n  // we should always default to exp.json, and only use app.json if it exists\n  const appJsonExists = await fileExistsAsync(path.join(projectRoot, 'app.json'));\n  const expJsonExists = await fileExistsAsync(path.join(projectRoot, 'exp.json'));\n\n  if (appJsonExists) {\n    return 'app.json';\n  } else if (expJsonExists || Config.developerTool !== 'crna') {\n    return 'exp.json';\n  } else {\n    return 'app.json';\n  }\n}\n\nexport async function readExpRcAsync(projectRoot: string): Promise<any> {\n  const expRcPath = path.join(projectRoot, '.exprc');\n\n  if (!fs.existsSync(expRcPath)) {\n    return {};\n  }\n\n  try {\n    return await new JsonFile(expRcPath, { json5: true }).readAsync();\n  } catch (e) {\n    logError(projectRoot, 'expo', `Error parsing JSON file: ${e.toString()}`);\n    return {};\n  }\n}\n\nlet customConfigPaths = {};\n\nexport async function setCustomConfigPath(projectRoot: string, configPath: string) {\n  customConfigPaths[projectRoot] = configPath;\n}\n\nexport async function readConfigJsonAsync(projectRoot: string): Promise<any> {\n  let exp;\n  let pkg;\n\n  let configPath, configName;\n  if (customConfigPaths[projectRoot]) {\n    configPath = customConfigPaths[projectRoot];\n    configName = path.basename(configPath);\n  } else {\n    configName = await configFilenameAsync(projectRoot);\n    configPath = path.join(projectRoot, configName);\n  }\n\n  try {\n    exp = await new JsonFile(configPath, { json5: true }).readAsync();\n\n    if (configName === 'app.json') {\n      // if we're not using exp.json, then we've stashed everything under an expo key\n      // this is only for app.json at time of writing\n      exp = exp.expo;\n    }\n  } catch (e) {\n    if (e.isJsonFileError) {\n      // TODO: add error codes to json-file\n      if (e.message.startsWith('Error parsing JSON file')) {\n        logError(projectRoot, 'expo', `Error parsing JSON file: ${e.cause.toString()}`);\n        return { exp: null, pkg: null };\n      }\n    }\n\n    // exp missing. might be in package.json\n  }\n\n  try {\n    const packageJsonPath =\n      exp && exp.nodeModulesPath\n        ? path.join(path.resolve(projectRoot, exp.nodeModulesPath), 'package.json')\n        : path.join(projectRoot, 'package.json');\n    pkg = await new JsonFile(packageJsonPath).readAsync();\n  } catch (e) {\n    if (e.isJsonFileError) {\n      // TODO: add error codes to json-file\n      if (e.message.startsWith('Error parsing JSON file')) {\n        logError(projectRoot, 'expo', `Error parsing JSON file: ${e.cause.toString()}`);\n        return { exp: null, pkg: null };\n      }\n    }\n\n    // pkg missing\n  }\n\n  // Easiest bail-out: package.json is missing\n  if (!pkg) {\n    logError(projectRoot, 'expo', `Error: Can't find package.json`);\n    return { exp: null, pkg: null };\n  }\n\n  // Grab our exp config from package.json (legacy) or exp.json\n  if (!exp && pkg.exp) {\n    exp = pkg.exp;\n    logError(projectRoot, 'expo', `Error: Move your \"exp\" config from package.json to exp.json.`);\n  } else if (!exp && !pkg.exp) {\n    logError(projectRoot, 'expo', `Error: Missing ${configName}. See https://docs.expo.io/`);\n    return { exp: null, pkg: null };\n  }\n\n  // fill any required fields we might care about\n\n  // TODO(adam) decide if there are other fields we want to provide defaults for\n\n  if (exp && !exp.name) {\n    exp.name = pkg.name;\n  }\n\n  if (exp && !exp.slug) {\n    exp.slug = slug(exp.name.toLowerCase());\n  }\n\n  if (exp && !exp.version) {\n    exp.version = pkg.version;\n  }\n\n  return { exp, pkg };\n}\n"],"sourceRoot":"/xdl/src"}